package network

import (
	"github.com/iotaledger/goshimmer/packages/core/commitment"
	"github.com/iotaledger/goshimmer/packages/core/epoch"
	"github.com/iotaledger/goshimmer/packages/protocol/engine/notarization"
	"github.com/iotaledger/goshimmer/packages/protocol/models"
	"github.com/iotaledger/hive.go/core/identity"
	"github.com/iotaledger/hive.go/ds/advancedset"
	"github.com/iotaledger/hive.go/ds/orderedmap"
	"github.com/iotaledger/hive.go/runtime/event"
)

// region Events ///////////////////////////////////////////////////////////////////////////////////////////////////////

type Events struct {
	BlockReceived                  *event.Event1[*BlockReceivedEvent]
	BlockRequestReceived           *event.Event1[*BlockRequestReceivedEvent]
	EpochCommitmentReceived        *event.Event1[*EpochCommitmentReceivedEvent]
	EpochCommitmentRequestReceived *event.Event1[*EpochCommitmentRequestReceivedEvent]
	AttestationsReceived           *event.Event1[*AttestationsReceivedEvent]
	AttestationsRequestReceived    *event.Event1[*AttestationsRequestReceivedEvent]
	Error                          *event.Event1[*ErrorEvent]

	event.Group[Events, *Events]
}

// NewEvents contains the constructor of the Events object (it is generated by a generic factory).
var NewEvents = event.CreateGroupConstructor(func() (newEvents *Events) {
	return &Events{
		BlockReceived:                  event.New1[*BlockReceivedEvent](),
		BlockRequestReceived:           event.New1[*BlockRequestReceivedEvent](),
		EpochCommitmentReceived:        event.New1[*EpochCommitmentReceivedEvent](),
		EpochCommitmentRequestReceived: event.New1[*EpochCommitmentRequestReceivedEvent](),
		AttestationsReceived:           event.New1[*AttestationsReceivedEvent](),
		AttestationsRequestReceived:    event.New1[*AttestationsRequestReceivedEvent](),
		Error:                          event.New1[*ErrorEvent](),
	}
})

// endregion ///////////////////////////////////////////////////////////////////////////////////////////////////////////

// region BlockReceivedEvent ///////////////////////////////////////////////////////////////////////////////////////////

type BlockReceivedEvent struct {
	Block  *models.Block
	Source identity.ID
}

// endregion ///////////////////////////////////////////////////////////////////////////////////////////////////////////

// region BlockRequestReceivedEvent ////////////////////////////////////////////////////////////////////////////////////

type BlockRequestReceivedEvent struct {
	BlockID models.BlockID
	Source  identity.ID
}

// endregion ///////////////////////////////////////////////////////////////////////////////////////////////////////////

// region EpochCommitmentReceivedEvent /////////////////////////////////////////////////////////////////////////////////

type EpochCommitmentReceivedEvent struct {
	Commitment *commitment.Commitment
	Source     identity.ID
}

// endregion ///////////////////////////////////////////////////////////////////////////////////////////////////////////

// region EpochCommitmentRequestReceivedEvent //////////////////////////////////////////////////////////////////////////

type EpochCommitmentRequestReceivedEvent struct {
	CommitmentID commitment.ID
	Source       identity.ID
}

// endregion ///////////////////////////////////////////////////////////////////////////////////////////////////////////

// region AttestationsReceivedEvent ////////////////////////////////////////////////////////////////////////////////////

type AttestationsReceivedEvent struct {
	Commitment   *commitment.Commitment
	BlockIDs     models.BlockIDs
	Attestations *orderedmap.OrderedMap[epoch.Index, *advancedset.AdvancedSet[*notarization.Attestation]]
	Source       identity.ID
}

// endregion ///////////////////////////////////////////////////////////////////////////////////////////////////////////

// region AttestationsRequestReceivedEvent /////////////////////////////////////////////////////////////////////////////

type AttestationsRequestReceivedEvent struct {
	Commitment *commitment.Commitment
	EndIndex   epoch.Index
	Source     identity.ID
}

// endregion ///////////////////////////////////////////////////////////////////////////////////////////////////////////

// region ErrorEvent ///////////////////////////////////////////////////////////////////////////////////////////////////

type ErrorEvent struct {
	Error  error
	Source identity.ID
}

// endregion ///////////////////////////////////////////////////////////////////////////////////////////////////////////
