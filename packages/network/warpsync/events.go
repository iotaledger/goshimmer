package warpsync

import (
	"github.com/iotaledger/hive.go/core/generics/event"
	"github.com/iotaledger/hive.go/core/identity"

	"github.com/iotaledger/goshimmer/packages/core/commitment"
	"github.com/iotaledger/goshimmer/packages/core/epoch"
	"github.com/iotaledger/goshimmer/packages/protocol/models"
)

// Events defines all the events related to the gossip protocol.
type Events struct {
	// Fired when a new block was received via the gossip protocol.
	EpochCommitmentReceived    *event.Linkable[*EpochCommitmentReceivedEvent]
	EpochBlocksRequestReceived *event.Linkable[*EpochBlocksRequestReceivedEvent]
	EpochBlocksStart           *event.Linkable[*EpochBlocksStartEvent]
	EpochBlock                 *event.Linkable[*EpochBlockEvent]
	EpochBlocksEnd             *event.Linkable[*EpochBlocksEndEvent]

	event.LinkableCollection[Events, *Events]
}

// NewEvents contains the constructor of the Events object (it is generated by a generic factory).
var NewEvents = event.LinkableConstructor(func() (newEvents *Events) {
	return &Events{
		EpochCommitmentReceived: event.NewLinkable[*EpochCommitmentReceivedEvent](),
	}
})

// EpochCommitmentReceivedEvent holds data about an epoch commitment received event.
type EpochCommitmentReceivedEvent struct {
	ID       identity.ID
	ECRecord *commitment.Commitment
}

// EpochBlocksRequestReceivedEvent holds data about an epoc blocks request received event.
type EpochBlocksRequestReceivedEvent struct {
	ID identity.ID
	EI epoch.Index
	EC commitment.ID
}

// EpochBlocksStartEvent holds data about an epoch blocks start event.
type EpochBlocksStartEvent struct {
	ID identity.ID
	EI epoch.Index
}

// EpochBlockEvent holds data about an epoch block event.
type EpochBlockEvent struct {
	ID    identity.ID
	EI    epoch.Index
	Block *models.Block
}

// EpochBlocksEndEvent holds data about an epoch blocks end event.
type EpochBlocksEndEvent struct {
	ID    identity.ID
	EI    epoch.Index
	EC    commitment.ID
	Roots *commitment.Roots
}
