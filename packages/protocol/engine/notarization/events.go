package notarization

import (
	"github.com/iotaledger/goshimmer/packages/core/epoch"
	"github.com/iotaledger/hive.go/core/generics/event"

	"github.com/iotaledger/goshimmer/packages/core/commitment"
	"github.com/iotaledger/goshimmer/packages/protocol/models"
)

// Events is a container that acts as a dictionary for the events of the notarization manager.
type Events struct {
	EpochCommitted      *event.Linkable[*commitment.Commitment]
	EvictedEpochDetails *event.Linkable[*EvictedEpochDetails]
	Error               *event.Linkable[error]

	event.LinkableCollection[Events, *Events]
}

// NewEvents contains the constructor of the Events object (it is generated by a generic factory).
var NewEvents = event.LinkableConstructor(func() (self *Events) {
	return &Events{
		EpochCommitted:      event.NewLinkable[*commitment.Commitment](),
		EvictedEpochDetails: event.NewLinkable[*EvictedEpochDetails](),
		Error:               event.NewLinkable[error](),
	}
})

type EpochMutationsEvents struct {
	AcceptedBlockRemoved *event.Linkable[models.BlockID]

	event.LinkableCollection[EpochMutationsEvents, *EpochMutationsEvents]
}

// NewEpochMutationsEvents contains the constructor of the EpochMutationsEvents object (it is generated by a generic factory).
var NewEpochMutationsEvents = event.LinkableConstructor(func() (self *EpochMutationsEvents) {
	return &EpochMutationsEvents{
		AcceptedBlockRemoved: event.NewLinkable[models.BlockID](),
	}
})

// EvictedEpochDetails contains the details of a soon evicted epoch.
type EvictedEpochDetails struct {
	Index                     epoch.Index
	AcceptedBlocksCount       int
	AcceptedTransactionsCount int
	ActiveValidatorsCount     int
}
