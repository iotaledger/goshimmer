package notarization

import (
	"github.com/iotaledger/goshimmer/packages/core/ads"
	"github.com/iotaledger/goshimmer/packages/core/commitment"
	"github.com/iotaledger/goshimmer/packages/protocol/ledger"
	"github.com/iotaledger/goshimmer/packages/protocol/ledger/utxo"
	"github.com/iotaledger/goshimmer/packages/protocol/models"
	"github.com/iotaledger/hive.go/runtime/event"
)

// Events is a container that acts as a dictionary for the events of the notarization manager.
type Events struct {
	EpochCommitted *event.Event1[*EpochCommittedDetails]
	Error          *event.Event1[error]

	event.Group[Events, *Events]
}

// NewEvents contains the constructor of the Events object (it is generated by a generic factory).
var NewEvents = event.CreateGroupConstructor(func() (self *Events) {
	return &Events{
		EpochCommitted: event.New1[*EpochCommittedDetails](),
		Error:          event.New1[error](),
	}
})

// EpochMutationsEvents contains the events that are triggered when a mutation is applied to the epoch.
type EpochMutationsEvents struct {
	AcceptedBlockRemoved *event.Event1[models.BlockID]

	event.Group[EpochMutationsEvents, *EpochMutationsEvents]
}

// NewEpochMutationsEvents contains the constructor of the EpochMutationsEvents object (it is generated by a generic factory).
var NewEpochMutationsEvents = event.CreateGroupConstructor(func() (self *EpochMutationsEvents) {
	return &EpochMutationsEvents{
		AcceptedBlockRemoved: event.New1[models.BlockID](),
	}
})

type OutputsProvider func(callback func(*ledger.OutputWithMetadata) error) error

// EpochCommittedDetails struct { contains the details of a committed epoch.
type EpochCommittedDetails struct {
	Commitment            *commitment.Commitment
	AcceptedBlocks        *ads.Set[models.BlockID, *models.BlockID]
	AcceptedTransactions  *ads.Set[utxo.TransactionID, *utxo.TransactionID]
	SpentOutputs          OutputsProvider
	CreatedOutputs        OutputsProvider
	ActiveValidatorsCount int
}
