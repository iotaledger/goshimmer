package clock

import (
	"time"

	"github.com/iotaledger/hive.go/core/generics/event"
)

type Events struct {
	// AcceptanceTimeUpdated is triggered when a Acceptance Tangle Time advances.
	AcceptanceTimeUpdated *event.Linkable[*TimeUpdate]

	// AcceptanceTimeUpdated is triggered when a Acceptance Tangle Time advances.
	ConfirmedTimeUpdated *event.Linkable[*TimeUpdate]

	event.LinkableCollection[Events, *Events]
}

// NewEvents contains the constructor of the Events object (it is generated by a generic factory).
var NewEvents = event.LinkableConstructor(func() (newEvents *Events) {
	return &Events{
		ConfirmedTimeUpdated:  event.NewLinkable[*TimeUpdate](),
		AcceptanceTimeUpdated: event.NewLinkable[*TimeUpdate](),
	}
})

// TimeUpdate represents an update in Tangle Time. It contains the new Tangle Time and timestamp when the update has occurred.
type TimeUpdate struct {
	// ATT is the new Acceptance Tangle Time.
	NewTime time.Time
	// UpdateTime is the wall clock time when the update has occurred.
	UpdateTime time.Time
}
