package clock

import (
	"time"

	"github.com/iotaledger/hive.go/runtime/event"
)

// Events is a collection of events that can be triggered by the Clock.
type Events struct {
	// AcceptanceTimeUpdated is triggered when a Acceptance Tangle Time advances.
	AcceptanceTimeUpdated *event.Event1[*TimeUpdateEvent]

	// AcceptanceTimeUpdated is triggered when a Acceptance Tangle Time advances.
	ConfirmedTimeUpdated *event.Event1[*TimeUpdateEvent]

	// LinkableCollection is a generic trait that allows to link multiple collections of events together.
	event.Group[Events, *Events]
}

// NewEvents contains the constructor of the Events object (it is generated by a generic factory).
var NewEvents = event.CreateGroupConstructor(func() (newEvents *Events) {
	return &Events{
		ConfirmedTimeUpdated:  event.New1[*TimeUpdateEvent](),
		AcceptanceTimeUpdated: event.New1[*TimeUpdateEvent](),
	}
})

// TimeUpdateEvent represents an update of the clock.
type TimeUpdateEvent struct {
	// NewTime contains the time value that was set.
	NewTime time.Time

	// UpdateTime contains the wall clock time when the update occurred.
	UpdateTime time.Time
}
