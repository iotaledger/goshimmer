package virtualvoting

import (
	"github.com/iotaledger/goshimmer/packages/core/votes/conflicttracker"
	"github.com/iotaledger/goshimmer/packages/core/votes/epochtracker"
	"github.com/iotaledger/goshimmer/packages/core/votes/sequencetracker"
	"github.com/iotaledger/goshimmer/packages/protocol/ledger/utxo"
	"github.com/iotaledger/hive.go/runtime/event"
)

type Events struct {
	BlockTracked *event.Event1[*Block]

	ConflictTracker *conflicttracker.Events[utxo.TransactionID]
	SequenceTracker *sequencetracker.Events
	EpochTracker    *epochtracker.Events

	event.Group[Events, *Events]
}

// NewEvents contains the constructor of the Events object (it is generated by a generic factory).
var NewEvents = event.CreateGroupConstructor(func() (newEvents *Events) {
	return &Events{
		BlockTracked:    event.New1[*Block](),
		ConflictTracker: conflicttracker.NewEvents[utxo.TransactionID](),
		SequenceTracker: sequencetracker.NewEvents(),
		EpochTracker:    epochtracker.NewEvents(),
	}
})

func (e *Events) WithConflictTrackerEvents(events *conflicttracker.Events[utxo.TransactionID]) (self *Events) {
	e.ConflictTracker = events

	return e
}
