package tipmanager

import (
	"github.com/iotaledger/goshimmer/packages/protocol/congestioncontrol/icca/scheduler"
	"github.com/iotaledger/hive.go/runtime/event"
)

// Events represents events happening on the TipManager.
type Events struct {
	// Fired when a tip is added.
	TipAdded *event.Event1[*scheduler.Block]

	// Fired when a tip is removed.
	TipRemoved *event.Event1[*scheduler.Block]

	event.Group[Events, *Events]
}

// NewEvents contains the constructor of the Events object (it is generated by a generic factory).
var NewEvents = event.CreateGroupConstructor(func() (newEvents *Events) {
	return &Events{
		TipAdded:   event.New1[*scheduler.Block](),
		TipRemoved: event.New1[*scheduler.Block](),
	}
})
