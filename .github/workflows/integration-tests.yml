name: Integration tests

on:
  pull_request:
    paths-ignore:
      - 'docs/**'
env:
  DOCKER_BUILDKIT: 1


jobs:

#  autopeering:
#    name: autopeering
#    env:
#      TEST_NAME: autopeering
#    runs-on: ubuntu-latest
#    steps:
#
#      - name: Checkout repository
#        uses: actions/checkout@v2
#
#      - name: Build GoShimmer image
#        run: docker build --build-arg DOWNLOAD_SNAPSHOT=0 -t iotaledger/goshimmer .
#
#      - name: Pull additional Docker images
#        run: |
#          docker pull angelocapossele/drand:v1.1.4
#          docker pull gaiaadm/pumba:0.7.2
#          docker pull gaiadocker/iproute2:latest
#
#      - name: Run integration tests
#        run: docker-compose -f tools/integration-tests/tester/docker-compose.yml up --abort-on-container-exit --exit-code-from tester --build
#
#      - name: Create logs from tester
#        if: always()
#        run: |
#          docker logs tester &> tools/integration-tests/logs/tester.log
#
#      - name: Save logs as artifacts
#        if: always()
#        uses: actions/upload-artifact@v1
#        with:
#          name: ${{ env.TEST_NAME }}
#          path: tools/integration-tests/logs

  common-no-cache:
    name: common (no cache)
    env:
      TEST_NAME: common
    runs-on: ubuntu-latest
    steps:

      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1
        with:
          install: true
          buildkitd-flags: --debug
          config-inline: |
            [worker.oci]
              max-parallelism = 4

      - name: Build GoShimmer image
        run: |
          docker build \
            --build-arg DOWNLOAD_SNAPSHOT=0 \
            -t iotaledger/goshimmer .


  common:
    name: common
    env:
      TEST_NAME: common
    runs-on: ubuntu-latest
    steps:

      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1
        with:
          install: true
          buildkitd-flags: --debug
          config-inline: |
            [worker.oci]
              max-parallelism = 4

      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

# TODO: is mode=max required? maybe we can shrink the cache size
      - name: Build GoShimmer image
        run: |
          docker build \
            --build-arg DOWNLOAD_SNAPSHOT=0 \
            --cache-from=type=local,src=/tmp/.buildx-cache \
            --cache-to=type=local,mode=min,dest=/tmp/.buildx-cache-new \
            --load \
            -t iotaledger/goshimmer .

      # Temporary fix for bloated cache size
      # https://github.com/docker/build-push-action/issues/252
      # https://github.com/moby/buildkit/issues/1896
      - name: Move cache
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache

#      - name: Run integration tests
#        run: |
#          docker-compose build -f tools/integration-tests/tester/docker-compose.yml
#          docker-compose -f tools/integration-tests/tester/docker-compose.yml up --abort-on-container-exit --exit-code-from tester
#
#      - name: Create logs from tester
#        if: always()
#        run: |
#          docker logs tester &> tools/integration-tests/logs/tester.log
#
#      - name: Save logs as artifacts
#        if: always()
#        uses: actions/upload-artifact@v1
#        with:
#          name: ${{ env.TEST_NAME }}
#          path: tools/integration-tests/logs

#  consensus:
#    name: consensus
#    env:
#      TEST_NAME: consensus
#    runs-on: ubuntu-latest
#    steps:
#
#      - name: Checkout repository
#        uses: actions/checkout@v2
#
#      - name: Build GoShimmer image
#        run: docker build --build-arg DOWNLOAD_SNAPSHOT=0 -t iotaledger/goshimmer .
#
#      - name: Pull additional Docker images
#        run: |
#          docker pull angelocapossele/drand:v1.1.4
#          docker pull gaiadocker/iproute2:latest
#
#      - name: Run integration tests
#        run: docker-compose -f tools/integration-tests/tester/docker-compose.yml up --abort-on-container-exit --exit-code-from tester --build
#
#      - name: Create logs from tester
#        if: always()
#        run: |
#          docker logs tester &> tools/integration-tests/logs/tester.log
#
#      - name: Save logs as artifacts
#        if: always()
#        uses: actions/upload-artifact@v1
#        with:
#          name: ${{ env.TEST_NAME }}
#          path: tools/integration-tests/logs
#
#
#  drng:
#    name: drng
#    env:
#      TEST_NAME: drng
#    runs-on: ubuntu-latest
#    steps:
#
#      - name: Checkout repository
#        uses: actions/checkout@v2
#
#      - name: Build GoShimmer image
#        run: docker build --build-arg DOWNLOAD_SNAPSHOT=0 -t iotaledger/goshimmer .
#
#      - name: Pull additional Docker images
#        run: |
#          docker pull angelocapossele/drand:v1.1.4
#          docker pull gaiadocker/iproute2:latest
#
#      - name: Run integration tests
#        run: docker-compose -f tools/integration-tests/tester/docker-compose.yml up --abort-on-container-exit --exit-code-from tester --build
#
#      - name: Create logs from tester
#        if: always()
#        run: |
#          docker logs tester &> tools/integration-tests/logs/tester.log
#
#      - name: Save logs as artifacts
#        if: always()
#        uses: actions/upload-artifact@v1
#        with:
#          name: ${{ env.TEST_NAME }}
#          path: tools/integration-tests/logs
#
#
#  value:
#    name: value
#    env:
#      TEST_NAME: value
#    runs-on: ubuntu-latest
#    steps:
#
#      - name: Checkout repository
#        uses: actions/checkout@v2
#
#      - name: Build GoShimmer image
#        run: docker build --build-arg DOWNLOAD_SNAPSHOT=0 -t iotaledger/goshimmer .
#
#      - name: Pull additional Docker images
#        run: |
#          docker pull angelocapossele/drand:v1.1.4
#          docker pull gaiadocker/iproute2:latest
#
#      - name: Run integration tests
#        run: docker-compose -f tools/integration-tests/tester/docker-compose.yml up --abort-on-container-exit --exit-code-from tester --build
#
#      - name: Create logs from tester
#        if: always()
#        run: |
#          docker logs tester &> tools/integration-tests/logs/tester.log
#
#      - name: Save logs as artifacts
#        if: always()
#        uses: actions/upload-artifact@v1
#        with:
#          name: ${{ env.TEST_NAME }}
#          path: tools/integration-tests/logs
#
#  faucet:
#    name: faucet
#    env:
#      TEST_NAME: faucet
#    runs-on: ubuntu-latest
#    steps:
#
#      - name: Checkout repository
#        uses: actions/checkout@v2
#
#      - name: Build GoShimmer image
#        run: docker build --build-arg DOWNLOAD_SNAPSHOT=0 -t iotaledger/goshimmer .
#
#      - name: Pull additional Docker images
#        run: |
#          docker pull angelocapossele/drand:v1.1.4
#          docker pull gaiadocker/iproute2:latest
#
#      - name: Run integration tests
#        run: docker-compose -f tools/integration-tests/tester/docker-compose.yml up --abort-on-container-exit --exit-code-from tester --build
#
#      - name: Create logs from tester
#        if: always()
#        run: |
#          docker logs tester &> tools/integration-tests/logs/tester.log
#
#      - name: Save logs as artifacts
#        if: always()
#        uses: actions/upload-artifact@v1
#        with:
#          name: ${{ env.TEST_NAME }}
#          path: tools/integration-tests/logs
#
#  mana:
#    name: mana
#    env:
#      TEST_NAME: mana
#    runs-on: ubuntu-latest
#    steps:
#
#      - name: Check out code
#        uses: actions/checkout@v2
#
#      - name: Build GoShimmer image
#        run: docker build --build-arg DOWNLOAD_SNAPSHOT=0 -t iotaledger/goshimmer .
#
#      - name: Pull additional Docker images
#        run: |
#          docker pull angelocapossele/drand:1.1.3
#          docker pull gaiadocker/iproute2:latest
#
#      - name: Run integration tests
#        run: docker-compose -f tools/integration-tests/tester/docker-compose.yml up --abort-on-container-exit --exit-code-from tester --build
#
#      - name: Create logs from tester
#        if: always()
#        run: |
#          docker logs tester &> tools/integration-tests/logs/tester.log
#
#      - name: Save logs as artifacts
#        if: always()
#        uses: actions/upload-artifact@v1
#        with:
#          name: ${{ env.TEST_NAME }}
#          path: tools/integration-tests/logs

#  diagnostics:
#    name: diagnostics
#    env:
#      TEST_NAME: diagnostics
#    runs-on: ubuntu-latest
#    steps:
#
#      - name: Check out code
#        uses: actions/checkout@v2
#
#      - name: Build GoShimmer image
#        run: docker build --build-arg DOWNLOAD_SNAPSHOT=0 -t iotaledger/goshimmer .
#
#      - name: Run integration tests
#        run: docker-compose -f tools/integration-tests/tester/docker-compose.yml up --abort-on-container-exit --exit-code-from tester --build
#
#      - name: Create logs from tester
#        if: always()
#        run: |
#          docker logs tester &> tools/integration-tests/logs/tester.log
#
#      - name: Save logs as artifacts
#        if: always()
#        uses: actions/upload-artifact@v1
#        with:
#          name: ${{ env.TEST_NAME }}
#          path: tools/integration-tests/logs
