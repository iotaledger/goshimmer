name: Feature network deploy
on:
  workflow_dispatch:
    inputs:
      snapshotUrl:
        description: 'Custom snapshot URL:'
        required: false
        default: ""
      remoteDebugging:
        description: 'Enable debugger (0/1):'
        required: true
        default: "0"
jobs:
  deploy:
    environment: feature
    runs-on: ubuntu-latest
    env:
      DOCKER_BUILDKIT: 1
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: '${{ secrets.IOTALEDGERTESTING_HUB_DOCKER_LOGIN }}'
          password: '${{ secrets.IOTALEDGERTESTING_HUB_DOCKER_PASSWORD }}'

      - name: Publish to Docker Hub
        uses: docker/build-push-action@v3
        with:
          tags: iotaledgertesting/goshimmer:feature
          push: true
          build-args: |
            CUSTOM_SNAPSHOT_URL=${{github.event.inputs.snapshotUrl}}
            DEFAULT_SNAPSHOT_URL=https://dbfiles-goshimmer.s3.eu-central-1.amazonaws.com/snapshots/feature/snapshot.bin
            REMOTE_DEBUGGING=${{github.event.inputs.remoteDebugging}}

      - name: Install SSH Key
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
        run: |
          mkdir -p ~/.ssh/
          echo "$SSH_PRIVATE_KEY" > ~/.ssh/id_ed25519
          sudo chmod 600 ~/.ssh/id_ed25519
          echo '
               Host *
                 StrictHostKeyChecking no
                 UserKnownHostsFile=/dev/null
               ' > ~/.ssh/config

      - name: Ansible deploy
        env:
          GOSHIMMER_SEEDS: '${{ secrets.GOSHIMMER_SEEDS }}'
          GRAFANA_ADMIN_PASSWORD: '${{ secrets.GRAFANA_ADMIN_PASSWORD }}'
          ELK_ELASTIC_PASSWORD: '${{ secrets.ELK_ELASTIC_PASSWORD }}'
          ELK_ELASTIC_USER: '${{ secrets.ELK_ELASTIC_USER }}'
          COMMIT_SHA: '${{ github.sha }}'
          GOSHIMMER_DOCKER_IMAGE: 'iotaledgertesting/goshimmer'
          GOSHIMMER_DOCKER_TAG: 'feature'
          SLACK_NOTIFICATION_WEBHOOK: '${{ secrets.SLACK_NOTIFICATION_WEBHOOK }}'
        run: |
          export NETWORK_VERSION=$((16#$(git rev-parse --short "$COMMIT_SHA")%1000000000+1000))
          ./deploy/ansible/run.sh feature.yml
