name: Test GoShimmer

on:
  pull_request:
    paths-ignore:
      - 'docs/**'

jobs:

  unit-tests:
    name: Unit tests
    runs-on: ubuntu-latest
    steps:

      - name: Setup Go 1.20
        uses: actions/setup-go@v1
        with:
          go-version: 1.20

      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Cache Go build and dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          # make sure concurrent runs (not really supported) do not match the same key but instead fall back to a reasonable cache
          key: ${{ runner.os }}-go-${{ hashFiles('go.sum') }}-${{ github.event.action }}${{ github.event.after }}
          restore-keys: |
            ${{ runner.os }}-go-${{ hashFiles('go.sum') }}
            ${{ runner.os }}-go-

      - name: Print Go version
        run: go version

      - name: Run Tests
        run: go test ./... -tags rocksdb -count=1 -timeout 10m


  unit-tests-race:
    name: Unit tests -race
    runs-on: ubuntu-latest
    steps:

      - name: Setup Go 1.20
        uses: actions/setup-go@v1
        with:
          go-version: 1.20

      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Cache Go build and dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          # make sure concurrent runs (not really supported) do not match the same key but instead fall back to a reasonable cache
          key: ${{ runner.os }}-go-${{ hashFiles('go.sum') }}-${{ github.event.action }}${{ github.event.after }}
          restore-keys: |
            ${{ runner.os }}-go-${{ hashFiles('go.sum') }}
            ${{ runner.os }}-go-
      
      - name: Print Go version
        run: go version

      - name: Run Tests with -race
        run: go test ./... -tags rocksdb -count=1 -race -short -timeout 20m
